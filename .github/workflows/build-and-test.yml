# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build and Test

on:
  pull_request:
    branches:
      - master
      - dev

jobs:
  # TEST
  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11, 16]
    steps:
      # checkout
      - uses: actions/checkout@v2
      # gradle wrapper validation against official sha
      - uses: gradle/wrapper-validation-action@v1
      # setup java
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
          java-package: jdk
      # mysql docker
      - name: DB Docker container
        run: |
          cd docker_data
          docker-compose up -d
      # gradle cache
      #- name: Cache Gradle packages
      #  uses: actions/cache@v3
      #  with:
      #    path: |
      #      ~/.gradle/caches
      #      ~/.gradle/wrapper
      #    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      #    restore-keys: |
      #      ${{ runner.os }}-gradle-
      # set permission to gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      # build and test
      - name: Build with Gradle
        run: |
          ./gradlew clean build
#          gradle --stop
      # Publish test results
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: build/test-results/**/*.xml
          check_name: 'Unit Test Results - Java ${{ matrix.java }}'
          comment_title: 'Unit Test Results - Java ${{ matrix.java }}'

  # codacy code analysis
  codacy-code-analysis:
    name: Codacy Analysis CLI
    runs-on: ubuntu-latest
    steps:
      # checkout
      - name: Checkout code
        uses: actions/checkout@v2
      # code analysis
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          upload: true
          max-allowed-issues: 2147483647
